import { createClient, SupabaseClient } from '@supabase/supabase-js';
import { IAgentRuntime } from '@elizaos/core';

export class SupabaseServiceManager {
    private supabase: SupabaseClient | null = null;
    private runtime: IAgentRuntime;

    constructor(runtime: IAgentRuntime) {
        this.runtime = runtime;
        this.initializeSupabase();
    }

    private initializeSupabase() {
        const supabaseUrl = this.runtime.getSetting('SUPABASE_URL');
        const supabaseKey = this.runtime.getSetting('SUPABASE_ANON_KEY');

        if (!supabaseUrl || !supabaseKey) {
            console.warn('[SupabaseServiceManager] Missing Supabase credentials');
            return;
        }

        this.supabase = createClient(supabaseUrl, supabaseKey);
    }

    getClient(): SupabaseClient | null {
        return this.supabase;
    }

    async testConnection(): Promise<boolean> {
        if (!this.supabase) return false;
        
        try {
            const { data, error } = await this.supabase
                .from('raid_participants')
                .select('count')
                .limit(1);
            
            return !error;
        } catch (error) {
            console.error('[SupabaseServiceManager] Connection test failed:', error);
            return false;
        }
    }
}

// Export as default
export default SupabaseServiceManager;
