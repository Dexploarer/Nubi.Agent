user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    sendfile        on;
    keepalive_timeout  65;
    gzip on;

    # Upstreams
    upstream api_backend {
        server api:8080;
    }
    upstream agent_backend {
        server agent:3000;
    }

    server {
        listen 80;
        server_name _;

        location /api/ {
            proxy_pass http://api_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /agent/ {
            proxy_pass http://agent_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }

        location / {
            return 200 'NUBI NGINX is up';
            add_header Content-Type text/plain;
        }
    }

    # TLS example (uncomment and provide certs under /etc/nginx/ssl)
    # server {
    #   listen 443 ssl http2;
    #   server_name _;
    #   ssl_certificate /etc/nginx/ssl/cert.pem;
    #   ssl_certificate_key /etc/nginx/ssl/key.pem;
    #   ...
    # }
}

